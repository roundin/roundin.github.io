"use strict";(self.webpackChunkroundin_homepage=self.webpackChunkroundin_homepage||[]).push([[468],{282:(e,t,o)=>{o.d(t,{Z:()=>m});var a=o(5987),n=o(7462),r=o(7294),i=(o(5697),o(6010)),c=o(4670),l=o(9693),d=o(7706),s=o(3871),p=r.forwardRef((function(e,t){var o=e.children,c=e.classes,l=e.className,p=e.color,m=void 0===p?"default":p,u=e.component,h=void 0===u?"button":u,b=e.disabled,g=void 0!==b&&b,y=e.disableElevation,x=void 0!==y&&y,f=e.disableFocusRipple,v=void 0!==f&&f,C=e.endIcon,k=e.focusVisibleClassName,S=e.fullWidth,E=void 0!==S&&S,Z=e.size,z=void 0===Z?"medium":Z,w=e.startIcon,N=e.type,R=void 0===N?"button":N,I=e.variant,B=void 0===I?"text":I,F=(0,a.Z)(e,["children","classes","className","color","component","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"]),$=w&&r.createElement("span",{className:(0,i.Z)(c.startIcon,c["iconSize".concat((0,s.Z)(z))])},w),L=C&&r.createElement("span",{className:(0,i.Z)(c.endIcon,c["iconSize".concat((0,s.Z)(z))])},C);return r.createElement(d.Z,(0,n.Z)({className:(0,i.Z)(c.root,c[B],l,"inherit"===m?c.colorInherit:"default"!==m&&c["".concat(B).concat((0,s.Z)(m))],"medium"!==z&&[c["".concat(B,"Size").concat((0,s.Z)(z))],c["size".concat((0,s.Z)(z))]],x&&c.disableElevation,g&&c.disabled,E&&c.fullWidth),component:h,disabled:g,focusRipple:!v,focusVisibleClassName:(0,i.Z)(c.focusVisible,k),ref:t,type:R},F),r.createElement("span",{className:c.label},$,o,L))}));const m=(0,c.Z)((function(e){return{root:(0,n.Z)({},e.typography.button,{boxSizing:"border-box",minWidth:64,padding:"6px 16px",borderRadius:e.shape.borderRadius,color:e.palette.text.primary,transition:e.transitions.create(["background-color","box-shadow","border"],{duration:e.transitions.duration.short}),"&:hover":{textDecoration:"none",backgroundColor:(0,l.Fq)(e.palette.text.primary,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"},"&$disabled":{backgroundColor:"transparent"}},"&$disabled":{color:e.palette.action.disabled}}),label:{width:"100%",display:"inherit",alignItems:"inherit",justifyContent:"inherit"},text:{padding:"6px 8px"},textPrimary:{color:e.palette.primary.main,"&:hover":{backgroundColor:(0,l.Fq)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},textSecondary:{color:e.palette.secondary.main,"&:hover":{backgroundColor:(0,l.Fq)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},outlined:{padding:"5px 15px",border:"1px solid ".concat("light"===e.palette.type?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)"),"&$disabled":{border:"1px solid ".concat(e.palette.action.disabledBackground)}},outlinedPrimary:{color:e.palette.primary.main,border:"1px solid ".concat((0,l.Fq)(e.palette.primary.main,.5)),"&:hover":{border:"1px solid ".concat(e.palette.primary.main),backgroundColor:(0,l.Fq)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},outlinedSecondary:{color:e.palette.secondary.main,border:"1px solid ".concat((0,l.Fq)(e.palette.secondary.main,.5)),"&:hover":{border:"1px solid ".concat(e.palette.secondary.main),backgroundColor:(0,l.Fq)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"&$disabled":{border:"1px solid ".concat(e.palette.action.disabled)}},contained:{color:e.palette.getContrastText(e.palette.grey[300]),backgroundColor:e.palette.grey[300],boxShadow:e.shadows[2],"&:hover":{backgroundColor:e.palette.grey.A100,boxShadow:e.shadows[4],"@media (hover: none)":{boxShadow:e.shadows[2],backgroundColor:e.palette.grey[300]},"&$disabled":{backgroundColor:e.palette.action.disabledBackground}},"&$focusVisible":{boxShadow:e.shadows[6]},"&:active":{boxShadow:e.shadows[8]},"&$disabled":{color:e.palette.action.disabled,boxShadow:e.shadows[0],backgroundColor:e.palette.action.disabledBackground}},containedPrimary:{color:e.palette.primary.contrastText,backgroundColor:e.palette.primary.main,"&:hover":{backgroundColor:e.palette.primary.dark,"@media (hover: none)":{backgroundColor:e.palette.primary.main}}},containedSecondary:{color:e.palette.secondary.contrastText,backgroundColor:e.palette.secondary.main,"&:hover":{backgroundColor:e.palette.secondary.dark,"@media (hover: none)":{backgroundColor:e.palette.secondary.main}}},disableElevation:{boxShadow:"none","&:hover":{boxShadow:"none"},"&$focusVisible":{boxShadow:"none"},"&:active":{boxShadow:"none"},"&$disabled":{boxShadow:"none"}},focusVisible:{},disabled:{},colorInherit:{color:"inherit",borderColor:"currentColor"},textSizeSmall:{padding:"4px 5px",fontSize:e.typography.pxToRem(13)},textSizeLarge:{padding:"8px 11px",fontSize:e.typography.pxToRem(15)},outlinedSizeSmall:{padding:"3px 9px",fontSize:e.typography.pxToRem(13)},outlinedSizeLarge:{padding:"7px 21px",fontSize:e.typography.pxToRem(15)},containedSizeSmall:{padding:"4px 10px",fontSize:e.typography.pxToRem(13)},containedSizeLarge:{padding:"8px 22px",fontSize:e.typography.pxToRem(15)},sizeSmall:{},sizeLarge:{},fullWidth:{width:"100%"},startIcon:{display:"inherit",marginRight:8,marginLeft:-4,"&$iconSizeSmall":{marginLeft:-2}},endIcon:{display:"inherit",marginRight:-4,marginLeft:8,"&$iconSizeSmall":{marginRight:-2}},iconSizeSmall:{"& > *:first-child":{fontSize:18}},iconSizeMedium:{"& > *:first-child":{fontSize:20}},iconSizeLarge:{"& > *:first-child":{fontSize:22}}}}),{name:"MuiButton"})(p)},1468:(e,t,o)=>{o.r(t),o.d(t,{default:()=>T});var a=o(7294),n=o(1120),r=o(8015),i=o(3467),c=o(282),l=o(7462),d=o(5987),s=(o(5697),o(6010)),p=o(885),m=o(2775),u=a.createContext();const h=u;var b=o(4670),g=o(7812),y=a.forwardRef((function(e,t){var o=e.autoFocus,n=e.checked,r=e.checkedIcon,i=e.classes,c=e.className,u=e.defaultChecked,b=e.disabled,y=e.icon,x=e.id,f=e.inputProps,v=e.inputRef,C=e.name,k=e.onBlur,S=e.onChange,E=e.onFocus,Z=e.readOnly,z=e.required,w=e.tabIndex,N=e.type,R=e.value,I=(0,d.Z)(e,["autoFocus","checked","checkedIcon","classes","className","defaultChecked","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value"]),B=(0,m.Z)({controlled:n,default:Boolean(u),name:"SwitchBase",state:"checked"}),F=(0,p.Z)(B,2),$=F[0],L=F[1],T=a.useContext(h),q=b;T&&void 0===q&&(q=T.disabled);var O="checkbox"===N||"radio"===N;return a.createElement(g.Z,(0,l.Z)({component:"span",className:(0,s.Z)(i.root,c,$&&i.checked,q&&i.disabled),disabled:q,tabIndex:null,role:void 0,onFocus:function(e){E&&E(e),T&&T.onFocus&&T.onFocus(e)},onBlur:function(e){k&&k(e),T&&T.onBlur&&T.onBlur(e)},ref:t},I),a.createElement("input",(0,l.Z)({autoFocus:o,checked:n,defaultChecked:u,className:i.input,disabled:q,id:O&&x,name:C,onChange:function(e){var t=e.target.checked;L(t),S&&S(e,t)},readOnly:Z,ref:v,required:z,tabIndex:w,type:N,value:R},f)),$?r:y)}));const x=(0,b.Z)({root:{padding:9},checked:{},disabled:{},input:{cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}},{name:"PrivateSwitchBase"})(y);var f=o(5209);const v=(0,f.Z)(a.createElement("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),C=(0,f.Z)(a.createElement("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked");const k=(0,b.Z)((function(e){return{root:{position:"relative",display:"flex","&$checked $layer":{transform:"scale(1)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeOut,duration:e.transitions.duration.shortest})}},layer:{left:0,position:"absolute",transform:"scale(0)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeIn,duration:e.transitions.duration.shortest})},checked:{}}}),{name:"PrivateRadioButtonIcon"})((function(e){var t=e.checked,o=e.classes,n=e.fontSize;return a.createElement("div",{className:(0,s.Z)(o.root,t&&o.checked)},a.createElement(v,{fontSize:n}),a.createElement(C,{fontSize:n,className:o.layer}))}));var S=o(9693),E=o(3871),Z=o(2568);const z=a.createContext();var w=a.createElement(k,{checked:!0}),N=a.createElement(k,null),R=a.forwardRef((function(e,t){var o=e.checked,n=e.classes,r=e.color,i=void 0===r?"secondary":r,c=e.name,p=e.onChange,m=e.size,u=void 0===m?"medium":m,h=(0,d.Z)(e,["checked","classes","color","name","onChange","size"]),b=a.useContext(z),g=o,y=(0,Z.Z)(p,b&&b.onChange),f=c;return b&&(void 0===g&&(g=b.value===e.value),void 0===f&&(f=b.name)),a.createElement(x,(0,l.Z)({color:i,type:"radio",icon:a.cloneElement(N,{fontSize:"small"===u?"small":"medium"}),checkedIcon:a.cloneElement(w,{fontSize:"small"===u?"small":"medium"}),classes:{root:(0,s.Z)(n.root,n["color".concat((0,E.Z)(i))]),checked:n.checked,disabled:n.disabled},name:f,checked:g,onChange:y,ref:t},h))}));const I=(0,b.Z)((function(e){return{root:{color:e.palette.text.secondary},checked:{},disabled:{},colorPrimary:{"&$checked":{color:e.palette.primary.main,"&:hover":{backgroundColor:(0,S.Fq)(e.palette.primary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}},colorSecondary:{"&$checked":{color:e.palette.secondary.main,"&:hover":{backgroundColor:(0,S.Fq)(e.palette.secondary.main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"&$disabled":{color:e.palette.action.disabled}}}}),{name:"MuiRadio"})(R),B=(0,n.Z)((e=>({root:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",width:"70px",height:"70px",margin:"0.5rem",padding:"1rem",backgroundColor:"#EEEEEE",borderRadius:"10px"}}))),F=({count:e,price:t,selected:o,setSelected:n})=>{const r=B();return a.createElement("div",{className:r.root,onClick:()=>{(e=>{if(e===o)return n(0);n(e)})(e)}},a.createElement(I,{checked:o===e,value:e,name:"radio-button-demo",inputProps:{"aria-label":"B"}}),a.createElement("div",null,e,"회권"),a.createElement("div",null,t,"원"))},$=(0,n.Z)((e=>({root:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",flexGrow:1,maxWidth:"500px",margin:"auto",padding:"0.5rem","& > div":{marginBottom:"0.5rem"}},textContent:{fontSize:"0.8rem"},couponLayout:{width:"100%",margin:"0.1rem"},couponCardGroup:{display:"flex",margin:"0.5rem"},applyBtn:{position:"fixed",bottom:"10px",width:"90%",maxWidth:"300px",fontWeight:"bold"}}))),L=({selectedTextCount:e,selectedVideoCount:t,changeSelectedTextCount:o,changeSelectedVideoCount:n,buyLessonCoupon:l})=>{const d=$();return a.createElement("div",{className:d.root},a.createElement(r.Z,{title:"레슨권 구매"}),a.createElement("div",{className:d.couponLayout},a.createElement(i.Z,{title:"문자 레슨권"}),a.createElement("div",{className:d.textContent},"보내주신 스윙 영상에 문자로 피드백을 전달드립니다."),a.createElement("div",{className:d.couponCardGroup},a.createElement(F,{count:1,price:4500,selected:e,setSelected:o}),a.createElement(F,{count:5,price:19800,selected:e,setSelected:o}))),a.createElement("div",{className:d.couponLayout},a.createElement(i.Z,{title:"영상 레슨권"}),a.createElement("div",{className:d.textContent},"프로님이 맞춤 영상을 찍어서 피드백을 전달드립니다."),a.createElement("div",{className:d.couponCardGroup},a.createElement(F,{count:1,price:4500,selected:t,setSelected:n}),a.createElement(F,{count:5,price:19800,selected:t,setSelected:n}))),a.createElement(c.Z,{className:d.applyBtn,disabled:e+t===0,variant:"contained",onClick:l},"레슨권 구매하기"))},T=()=>{const[e,t]=(0,a.useState)(1),[o,n]=(0,a.useState)(0),r={selectedTextCount:e,selectedVideoCount:o,changeSelectedTextCount:e=>t(e),changeSelectedVideoCount:e=>n(e),buyLessonCoupon:()=>{}};return a.createElement(L,r)}},3467:(e,t,o)=>{o.d(t,{Z:()=>r});var a=o(7294);const n=(0,o(1120).Z)((e=>({title:{display:"flex",width:"100%",fontSize:"1rem",justifyContent:"flex-start",fontWeight:"bold"}}))),r=({title:e})=>{const t=n();return a.createElement("div",{className:t.title}," ",e)}},8015:(e,t,o)=>{o.d(t,{Z:()=>r});var a=o(7294);const n=(0,o(1120).Z)((e=>({title:{display:"flex",width:"100%",fontSize:"1.25rem",justifyContent:"flex-start",fontWeight:"bold"}}))),r=({title:e})=>{const t=n();return a.createElement("div",{className:t.title}," ",e)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aEIsRUFOd0IsRUFBR1EsTUFBQUEsTUFDekIsTUFBTXZMLEVBQVU2SixJQUVoQixPQUFPLHVCQUFLNUosVUFBV0QsRUFBUXVMLE9BQXhCLElBQWlDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JvdW5kaW5faG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL0J1dHRvbi9CdXR0b24uanMiLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vRm9ybUNvbnRyb2wvRm9ybUNvbnRyb2xDb250ZXh0LmpzIiwid2VicGFjazovL3JvdW5kaW5faG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL2ludGVybmFsL1N3aXRjaEJhc2UuanMiLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vRm9ybUNvbnRyb2wvdXNlRm9ybUNvbnRyb2wuanMiLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vaW50ZXJuYWwvc3ZnLWljb25zL1JhZGlvQnV0dG9uVW5jaGVja2VkLmpzIiwid2VicGFjazovL3JvdW5kaW5faG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL2ludGVybmFsL3N2Zy1pY29ucy9SYWRpb0J1dHRvbkNoZWNrZWQuanMiLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vUmFkaW8vUmFkaW9CdXR0b25JY29uLmpzIiwid2VicGFjazovL3JvdW5kaW5faG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsLXVpL2NvcmUvZXNtL1JhZGlvR3JvdXAvUmFkaW9Hcm91cENvbnRleHQuanMiLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vUmFkaW8vUmFkaW8uanMiLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AbWF0ZXJpYWwtdWkvY29yZS9lc20vUmFkaW9Hcm91cC91c2VSYWRpb0dyb3VwLmpzIiwid2VicGFjazovL3JvdW5kaW5faG9tZXBhZ2UvLi9zcmMvY29tcG9uZW50L3VzZXJQYWdlL2NvbXBvbmVudC9Db3Vwb25DYXJkLnRzeCIsIndlYnBhY2s6Ly9yb3VuZGluX2hvbWVwYWdlLy4vc3JjL2NvbXBvbmVudC91c2VyUGFnZS9Vc2VyQ291cG9uUGFnZS50c3giLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL3NyYy91dGlscy9jb21wb25lbnQvY29tbW9uL1BhZ2VIZWFkZXJTdWJUaXRsZS50c3giLCJ3ZWJwYWNrOi8vcm91bmRpbl9ob21lcGFnZS8uL3NyYy91dGlscy9jb21wb25lbnQvY29tbW9uL1BhZ2VIZWFkZXJUaXRsZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHdpdGhTdHlsZXMgZnJvbSAnLi4vc3R5bGVzL3dpdGhTdHlsZXMnO1xuaW1wb3J0IHsgYWxwaGEgfSBmcm9tICcuLi9zdHlsZXMvY29sb3JNYW5pcHVsYXRvcic7XG5pbXBvcnQgQnV0dG9uQmFzZSBmcm9tICcuLi9CdXR0b25CYXNlJztcbmltcG9ydCBjYXBpdGFsaXplIGZyb20gJy4uL3V0aWxzL2NhcGl0YWxpemUnO1xuZXhwb3J0IHZhciBzdHlsZXMgPSBmdW5jdGlvbiBzdHlsZXModGhlbWUpIHtcbiAgcmV0dXJuIHtcbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50LiAqL1xuICAgIHJvb3Q6IF9leHRlbmRzKHt9LCB0aGVtZS50eXBvZ3JhcGh5LmJ1dHRvbiwge1xuICAgICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgICBtaW5XaWR0aDogNjQsXG4gICAgICBwYWRkaW5nOiAnNnB4IDE2cHgnLFxuICAgICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5zaGFwZS5ib3JkZXJSYWRpdXMsXG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnByaW1hcnksXG4gICAgICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoWydiYWNrZ3JvdW5kLWNvbG9yJywgJ2JveC1zaGFkb3cnLCAnYm9yZGVyJ10sIHtcbiAgICAgICAgZHVyYXRpb246IHRoZW1lLnRyYW5zaXRpb25zLmR1cmF0aW9uLnNob3J0XG4gICAgICB9KSxcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICB0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKHRoZW1lLnBhbGV0dGUudGV4dC5wcmltYXJ5LCB0aGVtZS5wYWxldHRlLmFjdGlvbi5ob3Zlck9wYWNpdHkpLFxuICAgICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnXG4gICAgICAgIH0sXG4gICAgICAgICcmJGRpc2FibGVkJzoge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJyYkZGlzYWJsZWQnOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZFxuICAgICAgfVxuICAgIH0pLFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHNwYW4gZWxlbWVudCB0aGF0IHdyYXBzIHRoZSBjaGlsZHJlbi4gKi9cbiAgICBsYWJlbDoge1xuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIC8vIEVuc3VyZSB0aGUgY29ycmVjdCB3aWR0aCBmb3IgaU9TIFNhZmFyaVxuICAgICAgZGlzcGxheTogJ2luaGVyaXQnLFxuICAgICAgYWxpZ25JdGVtczogJ2luaGVyaXQnLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdpbmhlcml0J1xuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGB2YXJpYW50PVwidGV4dFwiYC4gKi9cbiAgICB0ZXh0OiB7XG4gICAgICBwYWRkaW5nOiAnNnB4IDhweCdcbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgdmFyaWFudD1cInRleHRcImAgYW5kIGBjb2xvcj1cInByaW1hcnlcImAuICovXG4gICAgdGV4dFByaW1hcnk6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLCB0aGVtZS5wYWxldHRlLmFjdGlvbi5ob3Zlck9wYWNpdHkpLFxuICAgICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgdmFyaWFudD1cInRleHRcImAgYW5kIGBjb2xvcj1cInNlY29uZGFyeVwiYC4gKi9cbiAgICB0ZXh0U2Vjb25kYXJ5OiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5zZWNvbmRhcnkubWFpbixcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKHRoZW1lLnBhbGV0dGUuc2Vjb25kYXJ5Lm1haW4sIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eSksXG4gICAgICAgIC8vIFJlc2V0IG9uIHRvdWNoIGRldmljZXMsIGl0IGRvZXNuJ3QgYWRkIHNwZWNpZmljaXR5XG4gICAgICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGB2YXJpYW50PVwib3V0bGluZWRcImAuICovXG4gICAgb3V0bGluZWQ6IHtcbiAgICAgIHBhZGRpbmc6ICc1cHggMTVweCcsXG4gICAgICBib3JkZXI6IFwiMXB4IHNvbGlkIFwiLmNvbmNhdCh0aGVtZS5wYWxldHRlLnR5cGUgPT09ICdsaWdodCcgPyAncmdiYSgwLCAwLCAwLCAwLjIzKScgOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIzKScpLFxuICAgICAgJyYkZGlzYWJsZWQnOiB7XG4gICAgICAgIGJvcmRlcjogXCIxcHggc29saWQgXCIuY29uY2F0KHRoZW1lLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkQmFja2dyb3VuZClcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgdmFyaWFudD1cIm91dGxpbmVkXCJgIGFuZCBgY29sb3I9XCJwcmltYXJ5XCJgLiAqL1xuICAgIG91dGxpbmVkUHJpbWFyeToge1xuICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluLFxuICAgICAgYm9yZGVyOiBcIjFweCBzb2xpZCBcIi5jb25jYXQoYWxwaGEodGhlbWUucGFsZXR0ZS5wcmltYXJ5Lm1haW4sIDAuNSkpLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJvcmRlcjogXCIxcHggc29saWQgXCIuY29uY2F0KHRoZW1lLnBhbGV0dGUucHJpbWFyeS5tYWluKSxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhbHBoYSh0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uaG92ZXJPcGFjaXR5KSxcbiAgICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICAgJ0BtZWRpYSAoaG92ZXI6IG5vbmUpJzoge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHZhcmlhbnQ9XCJvdXRsaW5lZFwiYCBhbmQgYGNvbG9yPVwic2Vjb25kYXJ5XCJgLiAqL1xuICAgIG91dGxpbmVkU2Vjb25kYXJ5OiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5zZWNvbmRhcnkubWFpbixcbiAgICAgIGJvcmRlcjogXCIxcHggc29saWQgXCIuY29uY2F0KGFscGhhKHRoZW1lLnBhbGV0dGUuc2Vjb25kYXJ5Lm1haW4sIDAuNSkpLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJvcmRlcjogXCIxcHggc29saWQgXCIuY29uY2F0KHRoZW1lLnBhbGV0dGUuc2Vjb25kYXJ5Lm1haW4pLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKHRoZW1lLnBhbGV0dGUuc2Vjb25kYXJ5Lm1haW4sIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eSksXG4gICAgICAgIC8vIFJlc2V0IG9uIHRvdWNoIGRldmljZXMsIGl0IGRvZXNuJ3QgYWRkIHNwZWNpZmljaXR5XG4gICAgICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCdcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICcmJGRpc2FibGVkJzoge1xuICAgICAgICBib3JkZXI6IFwiMXB4IHNvbGlkIFwiLmNvbmNhdCh0aGVtZS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZClcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgdmFyaWFudD1cImNvbnRhaW5lZFwiYC4gKi9cbiAgICBjb250YWluZWQ6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmdldENvbnRyYXN0VGV4dCh0aGVtZS5wYWxldHRlLmdyZXlbMzAwXSksXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdLFxuICAgICAgYm94U2hhZG93OiB0aGVtZS5zaGFkb3dzWzJdLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5ncmV5LkExMDAsXG4gICAgICAgIGJveFNoYWRvdzogdGhlbWUuc2hhZG93c1s0XSxcbiAgICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICAgJ0BtZWRpYSAoaG92ZXI6IG5vbmUpJzoge1xuICAgICAgICAgIGJveFNoYWRvdzogdGhlbWUuc2hhZG93c1syXSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuZ3JleVszMDBdXG4gICAgICAgIH0sXG4gICAgICAgICcmJGRpc2FibGVkJzoge1xuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogdGhlbWUucGFsZXR0ZS5hY3Rpb24uZGlzYWJsZWRCYWNrZ3JvdW5kXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnJiRmb2N1c1Zpc2libGUnOiB7XG4gICAgICAgIGJveFNoYWRvdzogdGhlbWUuc2hhZG93c1s2XVxuICAgICAgfSxcbiAgICAgICcmOmFjdGl2ZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiB0aGVtZS5zaGFkb3dzWzhdXG4gICAgICB9LFxuICAgICAgJyYkZGlzYWJsZWQnOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLmFjdGlvbi5kaXNhYmxlZCxcbiAgICAgICAgYm94U2hhZG93OiB0aGVtZS5zaGFkb3dzWzBdLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkQmFja2dyb3VuZFxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGB2YXJpYW50PVwiY29udGFpbmVkXCJgIGFuZCBgY29sb3I9XCJwcmltYXJ5XCJgLiAqL1xuICAgIGNvbnRhaW5lZFByaW1hcnk6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkuY29udHJhc3RUZXh0LFxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgICcmOmhvdmVyJzoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUucHJpbWFyeS5kYXJrLFxuICAgICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpblxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHZhcmlhbnQ9XCJjb250YWluZWRcImAgYW5kIGBjb2xvcj1cInNlY29uZGFyeVwiYC4gKi9cbiAgICBjb250YWluZWRTZWNvbmRhcnk6IHtcbiAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnNlY29uZGFyeS5jb250cmFzdFRleHQsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLnBhbGV0dGUuc2Vjb25kYXJ5Lm1haW4sXG4gICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLnNlY29uZGFyeS5kYXJrLFxuICAgICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5wYWxldHRlLnNlY29uZGFyeS5tYWluXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgZGlzYWJsZUVsZXZhdGlvbj17dHJ1ZX1gLiAqL1xuICAgIGRpc2FibGVFbGV2YXRpb246IHtcbiAgICAgIGJveFNoYWRvdzogJ25vbmUnLFxuICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgIGJveFNoYWRvdzogJ25vbmUnXG4gICAgICB9LFxuICAgICAgJyYkZm9jdXNWaXNpYmxlJzoge1xuICAgICAgICBib3hTaGFkb3c6ICdub25lJ1xuICAgICAgfSxcbiAgICAgICcmOmFjdGl2ZSc6IHtcbiAgICAgICAgYm94U2hhZG93OiAnbm9uZSdcbiAgICAgIH0sXG4gICAgICAnJiRkaXNhYmxlZCc6IHtcbiAgICAgICAgYm94U2hhZG93OiAnbm9uZSdcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogUHNldWRvLWNsYXNzIGFwcGxpZWQgdG8gdGhlIEJ1dHRvbkJhc2Ugcm9vdCBlbGVtZW50IGlmIHRoZSBidXR0b24gaXMga2V5Ym9hcmQgZm9jdXNlZC4gKi9cbiAgICBmb2N1c1Zpc2libGU6IHt9LFxuXG4gICAgLyogUHNldWRvLWNsYXNzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgZGlzYWJsZWQ9e3RydWV9YC4gKi9cbiAgICBkaXNhYmxlZDoge30sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBjb2xvcj1cImluaGVyaXRcImAuICovXG4gICAgY29sb3JJbmhlcml0OiB7XG4gICAgICBjb2xvcjogJ2luaGVyaXQnLFxuICAgICAgYm9yZGVyQ29sb3I6ICdjdXJyZW50Q29sb3InXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHNpemU9XCJzbWFsbFwiYCBhbmQgYHZhcmlhbnQ9XCJ0ZXh0XCJgLiAqL1xuICAgIHRleHRTaXplU21hbGw6IHtcbiAgICAgIHBhZGRpbmc6ICc0cHggNXB4JyxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMTMpXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHNpemU9XCJsYXJnZVwiYCBhbmQgYHZhcmlhbnQ9XCJ0ZXh0XCJgLiAqL1xuICAgIHRleHRTaXplTGFyZ2U6IHtcbiAgICAgIHBhZGRpbmc6ICc4cHggMTFweCcsXG4gICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5weFRvUmVtKDE1KVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBzaXplPVwic21hbGxcImAgYW5kIGB2YXJpYW50PVwib3V0bGluZWRcImAuICovXG4gICAgb3V0bGluZWRTaXplU21hbGw6IHtcbiAgICAgIHBhZGRpbmc6ICczcHggOXB4JyxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMTMpXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHNpemU9XCJsYXJnZVwiYCBhbmQgYHZhcmlhbnQ9XCJvdXRsaW5lZFwiYC4gKi9cbiAgICBvdXRsaW5lZFNpemVMYXJnZToge1xuICAgICAgcGFkZGluZzogJzdweCAyMXB4JyxcbiAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnB4VG9SZW0oMTUpXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHNpemU9XCJzbWFsbFwiYCBhbmQgYHZhcmlhbnQ9XCJjb250YWluZWRcImAuICovXG4gICAgY29udGFpbmVkU2l6ZVNtYWxsOiB7XG4gICAgICBwYWRkaW5nOiAnNHB4IDEwcHgnLFxuICAgICAgZm9udFNpemU6IHRoZW1lLnR5cG9ncmFwaHkucHhUb1JlbSgxMylcbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgc2l6ZT1cImxhcmdlXCJgIGFuZCBgdmFyaWFudD1cImNvbnRhaW5lZFwiYC4gKi9cbiAgICBjb250YWluZWRTaXplTGFyZ2U6IHtcbiAgICAgIHBhZGRpbmc6ICc4cHggMjJweCcsXG4gICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5weFRvUmVtKDE1KVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBzaXplPVwic21hbGxcImAuICovXG4gICAgc2l6ZVNtYWxsOiB7fSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYHNpemU9XCJsYXJnZVwiYC4gKi9cbiAgICBzaXplTGFyZ2U6IHt9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgZnVsbFdpZHRoPXt0cnVlfWAuICovXG4gICAgZnVsbFdpZHRoOiB7XG4gICAgICB3aWR0aDogJzEwMCUnXG4gICAgfSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSBzdGFydEljb24gZWxlbWVudCBpZiBzdXBwbGllZC4gKi9cbiAgICBzdGFydEljb246IHtcbiAgICAgIGRpc3BsYXk6ICdpbmhlcml0JyxcbiAgICAgIG1hcmdpblJpZ2h0OiA4LFxuICAgICAgbWFyZ2luTGVmdDogLTQsXG4gICAgICAnJiRpY29uU2l6ZVNtYWxsJzoge1xuICAgICAgICBtYXJnaW5MZWZ0OiAtMlxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgZW5kSWNvbiBlbGVtZW50IGlmIHN1cHBsaWVkLiAqL1xuICAgIGVuZEljb246IHtcbiAgICAgIGRpc3BsYXk6ICdpbmhlcml0JyxcbiAgICAgIG1hcmdpblJpZ2h0OiAtNCxcbiAgICAgIG1hcmdpbkxlZnQ6IDgsXG4gICAgICAnJiRpY29uU2l6ZVNtYWxsJzoge1xuICAgICAgICBtYXJnaW5SaWdodDogLTJcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIGljb24gZWxlbWVudCBpZiBzdXBwbGllZCBhbmQgYHNpemU9XCJzbWFsbFwiYC4gKi9cbiAgICBpY29uU2l6ZVNtYWxsOiB7XG4gICAgICAnJiA+ICo6Zmlyc3QtY2hpbGQnOiB7XG4gICAgICAgIGZvbnRTaXplOiAxOFxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBTdHlsZXMgYXBwbGllZCB0byB0aGUgaWNvbiBlbGVtZW50IGlmIHN1cHBsaWVkIGFuZCBgc2l6ZT1cIm1lZGl1bVwiYC4gKi9cbiAgICBpY29uU2l6ZU1lZGl1bToge1xuICAgICAgJyYgPiAqOmZpcnN0LWNoaWxkJzoge1xuICAgICAgICBmb250U2l6ZTogMjBcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIGljb24gZWxlbWVudCBpZiBzdXBwbGllZCBhbmQgYHNpemU9XCJsYXJnZVwiYC4gKi9cbiAgICBpY29uU2l6ZUxhcmdlOiB7XG4gICAgICAnJiA+ICo6Zmlyc3QtY2hpbGQnOiB7XG4gICAgICAgIGZvbnRTaXplOiAyMlxuICAgICAgfVxuICAgIH1cbiAgfTtcbn07XG52YXIgQnV0dG9uID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gQnV0dG9uKHByb3BzLCByZWYpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc2VzID0gcHJvcHMuY2xhc3NlcyxcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIF9wcm9wcyRjb2xvciA9IHByb3BzLmNvbG9yLFxuICAgICAgY29sb3IgPSBfcHJvcHMkY29sb3IgPT09IHZvaWQgMCA/ICdkZWZhdWx0JyA6IF9wcm9wcyRjb2xvcixcbiAgICAgIF9wcm9wcyRjb21wb25lbnQgPSBwcm9wcy5jb21wb25lbnQsXG4gICAgICBjb21wb25lbnQgPSBfcHJvcHMkY29tcG9uZW50ID09PSB2b2lkIDAgPyAnYnV0dG9uJyA6IF9wcm9wcyRjb21wb25lbnQsXG4gICAgICBfcHJvcHMkZGlzYWJsZWQgPSBwcm9wcy5kaXNhYmxlZCxcbiAgICAgIGRpc2FibGVkID0gX3Byb3BzJGRpc2FibGVkID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRkaXNhYmxlZCxcbiAgICAgIF9wcm9wcyRkaXNhYmxlRWxldmF0aSA9IHByb3BzLmRpc2FibGVFbGV2YXRpb24sXG4gICAgICBkaXNhYmxlRWxldmF0aW9uID0gX3Byb3BzJGRpc2FibGVFbGV2YXRpID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRkaXNhYmxlRWxldmF0aSxcbiAgICAgIF9wcm9wcyRkaXNhYmxlRm9jdXNSaSA9IHByb3BzLmRpc2FibGVGb2N1c1JpcHBsZSxcbiAgICAgIGRpc2FibGVGb2N1c1JpcHBsZSA9IF9wcm9wcyRkaXNhYmxlRm9jdXNSaSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZGlzYWJsZUZvY3VzUmksXG4gICAgICBlbmRJY29uUHJvcCA9IHByb3BzLmVuZEljb24sXG4gICAgICBmb2N1c1Zpc2libGVDbGFzc05hbWUgPSBwcm9wcy5mb2N1c1Zpc2libGVDbGFzc05hbWUsXG4gICAgICBfcHJvcHMkZnVsbFdpZHRoID0gcHJvcHMuZnVsbFdpZHRoLFxuICAgICAgZnVsbFdpZHRoID0gX3Byb3BzJGZ1bGxXaWR0aCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcHJvcHMkZnVsbFdpZHRoLFxuICAgICAgX3Byb3BzJHNpemUgPSBwcm9wcy5zaXplLFxuICAgICAgc2l6ZSA9IF9wcm9wcyRzaXplID09PSB2b2lkIDAgPyAnbWVkaXVtJyA6IF9wcm9wcyRzaXplLFxuICAgICAgc3RhcnRJY29uUHJvcCA9IHByb3BzLnN0YXJ0SWNvbixcbiAgICAgIF9wcm9wcyR0eXBlID0gcHJvcHMudHlwZSxcbiAgICAgIHR5cGUgPSBfcHJvcHMkdHlwZSA9PT0gdm9pZCAwID8gJ2J1dHRvbicgOiBfcHJvcHMkdHlwZSxcbiAgICAgIF9wcm9wcyR2YXJpYW50ID0gcHJvcHMudmFyaWFudCxcbiAgICAgIHZhcmlhbnQgPSBfcHJvcHMkdmFyaWFudCA9PT0gdm9pZCAwID8gJ3RleHQnIDogX3Byb3BzJHZhcmlhbnQsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiY2hpbGRyZW5cIiwgXCJjbGFzc2VzXCIsIFwiY2xhc3NOYW1lXCIsIFwiY29sb3JcIiwgXCJjb21wb25lbnRcIiwgXCJkaXNhYmxlZFwiLCBcImRpc2FibGVFbGV2YXRpb25cIiwgXCJkaXNhYmxlRm9jdXNSaXBwbGVcIiwgXCJlbmRJY29uXCIsIFwiZm9jdXNWaXNpYmxlQ2xhc3NOYW1lXCIsIFwiZnVsbFdpZHRoXCIsIFwic2l6ZVwiLCBcInN0YXJ0SWNvblwiLCBcInR5cGVcIiwgXCJ2YXJpYW50XCJdKTtcblxuICB2YXIgc3RhcnRJY29uID0gc3RhcnRJY29uUHJvcCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnN0YXJ0SWNvbiwgY2xhc3Nlc1tcImljb25TaXplXCIuY29uY2F0KGNhcGl0YWxpemUoc2l6ZSkpXSlcbiAgfSwgc3RhcnRJY29uUHJvcCk7XG4gIHZhciBlbmRJY29uID0gZW5kSWNvblByb3AgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5lbmRJY29uLCBjbGFzc2VzW1wiaWNvblNpemVcIi5jb25jYXQoY2FwaXRhbGl6ZShzaXplKSldKVxuICB9LCBlbmRJY29uUHJvcCk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b25CYXNlLCBfZXh0ZW5kcyh7XG4gICAgY2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3Nlc1t2YXJpYW50XSwgY2xhc3NOYW1lLCBjb2xvciA9PT0gJ2luaGVyaXQnID8gY2xhc3Nlcy5jb2xvckluaGVyaXQgOiBjb2xvciAhPT0gJ2RlZmF1bHQnICYmIGNsYXNzZXNbXCJcIi5jb25jYXQodmFyaWFudCkuY29uY2F0KGNhcGl0YWxpemUoY29sb3IpKV0sIHNpemUgIT09ICdtZWRpdW0nICYmIFtjbGFzc2VzW1wiXCIuY29uY2F0KHZhcmlhbnQsIFwiU2l6ZVwiKS5jb25jYXQoY2FwaXRhbGl6ZShzaXplKSldLCBjbGFzc2VzW1wic2l6ZVwiLmNvbmNhdChjYXBpdGFsaXplKHNpemUpKV1dLCBkaXNhYmxlRWxldmF0aW9uICYmIGNsYXNzZXMuZGlzYWJsZUVsZXZhdGlvbiwgZGlzYWJsZWQgJiYgY2xhc3Nlcy5kaXNhYmxlZCwgZnVsbFdpZHRoICYmIGNsYXNzZXMuZnVsbFdpZHRoKSxcbiAgICBjb21wb25lbnQ6IGNvbXBvbmVudCxcbiAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgZm9jdXNSaXBwbGU6ICFkaXNhYmxlRm9jdXNSaXBwbGUsXG4gICAgZm9jdXNWaXNpYmxlQ2xhc3NOYW1lOiBjbHN4KGNsYXNzZXMuZm9jdXNWaXNpYmxlLCBmb2N1c1Zpc2libGVDbGFzc05hbWUpLFxuICAgIHJlZjogcmVmLFxuICAgIHR5cGU6IHR5cGVcbiAgfSwgb3RoZXIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogY2xhc3Nlcy5sYWJlbFxuICB9LCBzdGFydEljb24sIGNoaWxkcmVuLCBlbmRJY29uKSk7XG59KTtcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IEJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gfCBUaGVzZSBQcm9wVHlwZXMgYXJlIGdlbmVyYXRlZCBmcm9tIHRoZSBUeXBlU2NyaXB0IHR5cGUgZGVmaW5pdGlvbnMgfFxuICAvLyB8ICAgICBUbyB1cGRhdGUgdGhlbSBlZGl0IHRoZSBkLnRzIGZpbGUgYW5kIHJ1biBcInlhcm4gcHJvcHR5cGVzXCIgICAgIHxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8qKlxuICAgKiBUaGUgY29udGVudCBvZiB0aGUgYnV0dG9uLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBjb21wb25lbnQuIEl0IHN1cHBvcnRzIHRob3NlIHRoZW1lIGNvbG9ycyB0aGF0IG1ha2Ugc2Vuc2UgZm9yIHRoaXMgY29tcG9uZW50LlxuICAgKi9cbiAgY29sb3I6IFByb3BUeXBlcy5vbmVPZihbJ2RlZmF1bHQnLCAnaW5oZXJpdCcsICdwcmltYXJ5JywgJ3NlY29uZGFyeSddKSxcblxuICAvKipcbiAgICogVGhlIGNvbXBvbmVudCB1c2VkIGZvciB0aGUgcm9vdCBub2RlLlxuICAgKiBFaXRoZXIgYSBzdHJpbmcgdG8gdXNlIGEgSFRNTCBlbGVtZW50IG9yIGEgY29tcG9uZW50LlxuICAgKi9cbiAgY29tcG9uZW50OiBQcm9wVHlwZXNcbiAgLyogQHR5cGVzY3JpcHQtdG8tcHJvcHR5cGVzLWlnbm9yZSAqL1xuICAuZWxlbWVudFR5cGUsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGJ1dHRvbiB3aWxsIGJlIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIG5vIGVsZXZhdGlvbiBpcyB1c2VkLlxuICAgKi9cbiAgZGlzYWJsZUVsZXZhdGlvbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlICBrZXlib2FyZCBmb2N1cyByaXBwbGUgd2lsbCBiZSBkaXNhYmxlZC5cbiAgICovXG4gIGRpc2FibGVGb2N1c1JpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHJpcHBsZSBlZmZlY3Qgd2lsbCBiZSBkaXNhYmxlZC5cbiAgICpcbiAgICog4pqg77iPIFdpdGhvdXQgYSByaXBwbGUgdGhlcmUgaXMgbm8gc3R5bGluZyBmb3IgOmZvY3VzLXZpc2libGUgYnkgZGVmYXVsdC4gQmUgc3VyZVxuICAgKiB0byBoaWdobGlnaHQgdGhlIGVsZW1lbnQgYnkgYXBwbHlpbmcgc2VwYXJhdGUgc3R5bGVzIHdpdGggdGhlIGBmb2N1c1Zpc2libGVDbGFzc05hbWVgLlxuICAgKi9cbiAgZGlzYWJsZVJpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEVsZW1lbnQgcGxhY2VkIGFmdGVyIHRoZSBjaGlsZHJlbi5cbiAgICovXG4gIGVuZEljb246IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBmb2N1c1Zpc2libGVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGJ1dHRvbiB3aWxsIHRha2UgdXAgdGhlIGZ1bGwgd2lkdGggb2YgaXRzIGNvbnRhaW5lci5cbiAgICovXG4gIGZ1bGxXaWR0aDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBVUkwgdG8gbGluayB0byB3aGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZC5cbiAgICogSWYgZGVmaW5lZCwgYW4gYGFgIGVsZW1lbnQgd2lsbCBiZSB1c2VkIGFzIHRoZSByb290IG5vZGUuXG4gICAqL1xuICBocmVmOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgYnV0dG9uLlxuICAgKiBgc21hbGxgIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGRlbnNlIGJ1dHRvbiBzdHlsaW5nLlxuICAgKi9cbiAgc2l6ZTogUHJvcFR5cGVzLm9uZU9mKFsnbGFyZ2UnLCAnbWVkaXVtJywgJ3NtYWxsJ10pLFxuXG4gIC8qKlxuICAgKiBFbGVtZW50IHBsYWNlZCBiZWZvcmUgdGhlIGNoaWxkcmVuLlxuICAgKi9cbiAgc3RhcnRJY29uOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgdHlwZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9uZU9mKFsnYnV0dG9uJywgJ3Jlc2V0JywgJ3N1Ym1pdCddKSwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFyaWFudCB0byB1c2UuXG4gICAqL1xuICB2YXJpYW50OiBQcm9wVHlwZXMub25lT2YoWydjb250YWluZWQnLCAnb3V0bGluZWQnLCAndGV4dCddKVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXMoc3R5bGVzLCB7XG4gIG5hbWU6ICdNdWlCdXR0b24nXG59KShCdXR0b24pOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG52YXIgRm9ybUNvbnRyb2xDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBGb3JtQ29udHJvbENvbnRleHQuZGlzcGxheU5hbWUgPSAnRm9ybUNvbnRyb2xDb250ZXh0Jztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUZvcm1Db250cm9sKCkge1xuICByZXR1cm4gUmVhY3QudXNlQ29udGV4dChGb3JtQ29udHJvbENvbnRleHQpO1xufVxuZXhwb3J0IGRlZmF1bHQgRm9ybUNvbnRyb2xDb250ZXh0OyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zbGljZWRUb0FycmF5XCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc1wiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgcmVmVHlwZSB9IGZyb20gJ0BtYXRlcmlhbC11aS91dGlscyc7XG5pbXBvcnQgdXNlQ29udHJvbGxlZCBmcm9tICcuLi91dGlscy91c2VDb250cm9sbGVkJztcbmltcG9ydCB1c2VGb3JtQ29udHJvbCBmcm9tICcuLi9Gb3JtQ29udHJvbC91c2VGb3JtQ29udHJvbCc7XG5pbXBvcnQgd2l0aFN0eWxlcyBmcm9tICcuLi9zdHlsZXMvd2l0aFN0eWxlcyc7XG5pbXBvcnQgSWNvbkJ1dHRvbiBmcm9tICcuLi9JY29uQnV0dG9uJztcbmV4cG9ydCB2YXIgc3R5bGVzID0ge1xuICByb290OiB7XG4gICAgcGFkZGluZzogOVxuICB9LFxuICBjaGVja2VkOiB7fSxcbiAgZGlzYWJsZWQ6IHt9LFxuICBpbnB1dDoge1xuICAgIGN1cnNvcjogJ2luaGVyaXQnLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIG9wYWNpdHk6IDAsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICB0b3A6IDAsXG4gICAgbGVmdDogMCxcbiAgICBtYXJnaW46IDAsXG4gICAgcGFkZGluZzogMCxcbiAgICB6SW5kZXg6IDFcbiAgfVxufTtcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG52YXIgU3dpdGNoQmFzZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIFN3aXRjaEJhc2UocHJvcHMsIHJlZikge1xuICB2YXIgYXV0b0ZvY3VzID0gcHJvcHMuYXV0b0ZvY3VzLFxuICAgICAgY2hlY2tlZFByb3AgPSBwcm9wcy5jaGVja2VkLFxuICAgICAgY2hlY2tlZEljb24gPSBwcm9wcy5jaGVja2VkSWNvbixcbiAgICAgIGNsYXNzZXMgPSBwcm9wcy5jbGFzc2VzLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgZGVmYXVsdENoZWNrZWQgPSBwcm9wcy5kZWZhdWx0Q2hlY2tlZCxcbiAgICAgIGRpc2FibGVkUHJvcCA9IHByb3BzLmRpc2FibGVkLFxuICAgICAgaWNvbiA9IHByb3BzLmljb24sXG4gICAgICBpZCA9IHByb3BzLmlkLFxuICAgICAgaW5wdXRQcm9wcyA9IHByb3BzLmlucHV0UHJvcHMsXG4gICAgICBpbnB1dFJlZiA9IHByb3BzLmlucHV0UmVmLFxuICAgICAgbmFtZSA9IHByb3BzLm5hbWUsXG4gICAgICBvbkJsdXIgPSBwcm9wcy5vbkJsdXIsXG4gICAgICBvbkNoYW5nZSA9IHByb3BzLm9uQ2hhbmdlLFxuICAgICAgb25Gb2N1cyA9IHByb3BzLm9uRm9jdXMsXG4gICAgICByZWFkT25seSA9IHByb3BzLnJlYWRPbmx5LFxuICAgICAgcmVxdWlyZWQgPSBwcm9wcy5yZXF1aXJlZCxcbiAgICAgIHRhYkluZGV4ID0gcHJvcHMudGFiSW5kZXgsXG4gICAgICB0eXBlID0gcHJvcHMudHlwZSxcbiAgICAgIHZhbHVlID0gcHJvcHMudmFsdWUsXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhwcm9wcywgW1wiYXV0b0ZvY3VzXCIsIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRJY29uXCIsIFwiY2xhc3Nlc1wiLCBcImNsYXNzTmFtZVwiLCBcImRlZmF1bHRDaGVja2VkXCIsIFwiZGlzYWJsZWRcIiwgXCJpY29uXCIsIFwiaWRcIiwgXCJpbnB1dFByb3BzXCIsIFwiaW5wdXRSZWZcIiwgXCJuYW1lXCIsIFwib25CbHVyXCIsIFwib25DaGFuZ2VcIiwgXCJvbkZvY3VzXCIsIFwicmVhZE9ubHlcIiwgXCJyZXF1aXJlZFwiLCBcInRhYkluZGV4XCIsIFwidHlwZVwiLCBcInZhbHVlXCJdKTtcblxuICB2YXIgX3VzZUNvbnRyb2xsZWQgPSB1c2VDb250cm9sbGVkKHtcbiAgICBjb250cm9sbGVkOiBjaGVja2VkUHJvcCxcbiAgICBkZWZhdWx0OiBCb29sZWFuKGRlZmF1bHRDaGVja2VkKSxcbiAgICBuYW1lOiAnU3dpdGNoQmFzZScsXG4gICAgc3RhdGU6ICdjaGVja2VkJ1xuICB9KSxcbiAgICAgIF91c2VDb250cm9sbGVkMiA9IF9zbGljZWRUb0FycmF5KF91c2VDb250cm9sbGVkLCAyKSxcbiAgICAgIGNoZWNrZWQgPSBfdXNlQ29udHJvbGxlZDJbMF0sXG4gICAgICBzZXRDaGVja2VkU3RhdGUgPSBfdXNlQ29udHJvbGxlZDJbMV07XG5cbiAgdmFyIG11aUZvcm1Db250cm9sID0gdXNlRm9ybUNvbnRyb2woKTtcblxuICB2YXIgaGFuZGxlRm9jdXMgPSBmdW5jdGlvbiBoYW5kbGVGb2N1cyhldmVudCkge1xuICAgIGlmIChvbkZvY3VzKSB7XG4gICAgICBvbkZvY3VzKGV2ZW50KTtcbiAgICB9XG5cbiAgICBpZiAobXVpRm9ybUNvbnRyb2wgJiYgbXVpRm9ybUNvbnRyb2wub25Gb2N1cykge1xuICAgICAgbXVpRm9ybUNvbnRyb2wub25Gb2N1cyhldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBoYW5kbGVCbHVyID0gZnVuY3Rpb24gaGFuZGxlQmx1cihldmVudCkge1xuICAgIGlmIChvbkJsdXIpIHtcbiAgICAgIG9uQmx1cihldmVudCk7XG4gICAgfVxuXG4gICAgaWYgKG11aUZvcm1Db250cm9sICYmIG11aUZvcm1Db250cm9sLm9uQmx1cikge1xuICAgICAgbXVpRm9ybUNvbnRyb2wub25CbHVyKGV2ZW50KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGhhbmRsZUlucHV0Q2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlSW5wdXRDaGFuZ2UoZXZlbnQpIHtcbiAgICB2YXIgbmV3Q2hlY2tlZCA9IGV2ZW50LnRhcmdldC5jaGVja2VkO1xuICAgIHNldENoZWNrZWRTdGF0ZShuZXdDaGVja2VkKTtcblxuICAgIGlmIChvbkNoYW5nZSkge1xuICAgICAgLy8gVE9ETyB2NTogcmVtb3ZlIHRoZSBzZWNvbmQgYXJndW1lbnQuXG4gICAgICBvbkNoYW5nZShldmVudCwgbmV3Q2hlY2tlZCk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBkaXNhYmxlZCA9IGRpc2FibGVkUHJvcDtcblxuICBpZiAobXVpRm9ybUNvbnRyb2wpIHtcbiAgICBpZiAodHlwZW9mIGRpc2FibGVkID09PSAndW5kZWZpbmVkJykge1xuICAgICAgZGlzYWJsZWQgPSBtdWlGb3JtQ29udHJvbC5kaXNhYmxlZDtcbiAgICB9XG4gIH1cblxuICB2YXIgaGFzTGFiZWxGb3IgPSB0eXBlID09PSAnY2hlY2tib3gnIHx8IHR5cGUgPT09ICdyYWRpbyc7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChJY29uQnV0dG9uLCBfZXh0ZW5kcyh7XG4gICAgY29tcG9uZW50OiBcInNwYW5cIixcbiAgICBjbGFzc05hbWU6IGNsc3goY2xhc3Nlcy5yb290LCBjbGFzc05hbWUsIGNoZWNrZWQgJiYgY2xhc3Nlcy5jaGVja2VkLCBkaXNhYmxlZCAmJiBjbGFzc2VzLmRpc2FibGVkKSxcbiAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgdGFiSW5kZXg6IG51bGwsXG4gICAgcm9sZTogdW5kZWZpbmVkLFxuICAgIG9uRm9jdXM6IGhhbmRsZUZvY3VzLFxuICAgIG9uQmx1cjogaGFuZGxlQmx1cixcbiAgICByZWY6IHJlZlxuICB9LCBvdGhlciksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgX2V4dGVuZHMoe1xuICAgIGF1dG9Gb2N1czogYXV0b0ZvY3VzLFxuICAgIGNoZWNrZWQ6IGNoZWNrZWRQcm9wLFxuICAgIGRlZmF1bHRDaGVja2VkOiBkZWZhdWx0Q2hlY2tlZCxcbiAgICBjbGFzc05hbWU6IGNsYXNzZXMuaW5wdXQsXG4gICAgZGlzYWJsZWQ6IGRpc2FibGVkLFxuICAgIGlkOiBoYXNMYWJlbEZvciAmJiBpZCxcbiAgICBuYW1lOiBuYW1lLFxuICAgIG9uQ2hhbmdlOiBoYW5kbGVJbnB1dENoYW5nZSxcbiAgICByZWFkT25seTogcmVhZE9ubHksXG4gICAgcmVmOiBpbnB1dFJlZixcbiAgICByZXF1aXJlZDogcmVxdWlyZWQsXG4gICAgdGFiSW5kZXg6IHRhYkluZGV4LFxuICAgIHR5cGU6IHR5cGUsXG4gICAgdmFsdWU6IHZhbHVlXG4gIH0sIGlucHV0UHJvcHMpKSwgY2hlY2tlZCA/IGNoZWNrZWRJY29uIDogaWNvbik7XG59KTsgLy8gTkI6IElmIGNoYW5nZWQsIHBsZWFzZSB1cGRhdGUgQ2hlY2tib3gsIFN3aXRjaCBhbmQgUmFkaW9cbi8vIHNvIHRoYXQgdGhlIEFQSSBkb2N1bWVudGF0aW9uIGlzIHVwZGF0ZWQuXG5cbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFN3aXRjaEJhc2UucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgYGlucHV0YCBlbGVtZW50IHdpbGwgYmUgZm9jdXNlZCBkdXJpbmcgdGhlIGZpcnN0IG1vdW50LlxuICAgKi9cbiAgYXV0b0ZvY3VzOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIGNoZWNrZWQuXG4gICAqL1xuICBjaGVja2VkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGljb24gdG8gZGlzcGxheSB3aGVuIHRoZSBjb21wb25lbnQgaXMgY2hlY2tlZC5cbiAgICovXG4gIGNoZWNrZWRJY29uOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBPdmVycmlkZSBvciBleHRlbmQgdGhlIHN0eWxlcyBhcHBsaWVkIHRvIHRoZSBjb21wb25lbnQuXG4gICAqIFNlZSBbQ1NTIEFQSV0oI2NzcykgYmVsb3cgZm9yIG1vcmUgZGV0YWlscy5cbiAgICovXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBkZWZhdWx0Q2hlY2tlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIHN3aXRjaCB3aWxsIGJlIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgaWNvbiB0byBkaXNwbGF5IHdoZW4gdGhlIGNvbXBvbmVudCBpcyB1bmNoZWNrZWQuXG4gICAqL1xuICBpY29uOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBUaGUgaWQgb2YgdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBbQXR0cmlidXRlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0F0dHJpYnV0ZXMpIGFwcGxpZWQgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFBhc3MgYSByZWYgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UmVmOiByZWZUeXBlLFxuXG4gIC8qXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQmx1cjogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIHdoZW4gdGhlIHN0YXRlIGlzIGNoYW5nZWQuXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBldmVudCBUaGUgZXZlbnQgc291cmNlIG9mIHRoZSBjYWxsYmFjay5cbiAgICogWW91IGNhbiBwdWxsIG91dCB0aGUgbmV3IGNoZWNrZWQgc3RhdGUgYnkgYWNjZXNzaW5nIGBldmVudC50YXJnZXQuY2hlY2tlZGAgKGJvb2xlYW4pLlxuICAgKi9cbiAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBvbkZvY3VzOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogSXQgcHJldmVudHMgdGhlIHVzZXIgZnJvbSBjaGFuZ2luZyB0aGUgdmFsdWUgb2YgdGhlIGZpZWxkXG4gICAqIChub3QgZnJvbSBpbnRlcmFjdGluZyB3aXRoIHRoZSBmaWVsZCkuXG4gICAqL1xuICByZWFkT25seTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgZWxlbWVudCB3aWxsIGJlIHJlcXVpcmVkLlxuICAgKi9cbiAgcmVxdWlyZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICB0YWJJbmRleDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnN0cmluZ10pLFxuXG4gIC8qKlxuICAgKiBUaGUgaW5wdXQgY29tcG9uZW50IHByb3AgYHR5cGVgLlxuICAgKi9cbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICovXG4gIHZhbHVlOiBQcm9wVHlwZXMuYW55XG59IDogdm9pZCAwO1xuZXhwb3J0IGRlZmF1bHQgd2l0aFN0eWxlcyhzdHlsZXMsIHtcbiAgbmFtZTogJ1ByaXZhdGVTd2l0Y2hCYXNlJ1xufSkoU3dpdGNoQmFzZSk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEZvcm1Db250cm9sQ29udGV4dCBmcm9tICcuL0Zvcm1Db250cm9sQ29udGV4dCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VGb3JtQ29udHJvbCgpIHtcbiAgcmV0dXJuIFJlYWN0LnVzZUNvbnRleHQoRm9ybUNvbnRyb2xDb250ZXh0KTtcbn0iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3JlYXRlU3ZnSWNvbiBmcm9tICcuLi8uLi91dGlscy9jcmVhdGVTdmdJY29uJztcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVTdmdJY29uKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICBkOiBcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQyIDAtOC0zLjU4LTgtOHMzLjU4LTggOC04IDggMy41OCA4IDgtMy41OCA4LTggOHpcIlxufSksICdSYWRpb0J1dHRvblVuY2hlY2tlZCcpOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjcmVhdGVTdmdJY29uIGZyb20gJy4uLy4uL3V0aWxzL2NyZWF0ZVN2Z0ljb24nO1xuLyoqXG4gKiBAaWdub3JlIC0gaW50ZXJuYWwgY29tcG9uZW50LlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN2Z0ljb24oIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gIGQ6IFwiTTguNDY1IDguNDY1QzkuMzcgNy41NiAxMC42MiA3IDEyIDdDMTQuNzYgNyAxNyA5LjI0IDE3IDEyQzE3IDEzLjM4IDE2LjQ0IDE0LjYzIDE1LjUzNSAxNS41MzVDMTQuNjMgMTYuNDQgMTMuMzggMTcgMTIgMTdDOS4yNCAxNyA3IDE0Ljc2IDcgMTJDNyAxMC42MiA3LjU2IDkuMzcgOC40NjUgOC40NjVaXCJcbn0pLCAnUmFkaW9CdXR0b25DaGVja2VkJyk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IFJhZGlvQnV0dG9uVW5jaGVja2VkSWNvbiBmcm9tICcuLi9pbnRlcm5hbC9zdmctaWNvbnMvUmFkaW9CdXR0b25VbmNoZWNrZWQnO1xuaW1wb3J0IFJhZGlvQnV0dG9uQ2hlY2tlZEljb24gZnJvbSAnLi4vaW50ZXJuYWwvc3ZnLWljb25zL1JhZGlvQnV0dG9uQ2hlY2tlZCc7XG5pbXBvcnQgd2l0aFN0eWxlcyBmcm9tICcuLi9zdHlsZXMvd2l0aFN0eWxlcyc7XG5leHBvcnQgdmFyIHN0eWxlcyA9IGZ1bmN0aW9uIHN0eWxlcyh0aGVtZSkge1xuICByZXR1cm4ge1xuICAgIHJvb3Q6IHtcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgJyYkY2hlY2tlZCAkbGF5ZXInOiB7XG4gICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlKDEpJyxcbiAgICAgICAgdHJhbnNpdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuY3JlYXRlKCd0cmFuc2Zvcm0nLCB7XG4gICAgICAgICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZU91dCxcbiAgICAgICAgICBkdXJhdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uc2hvcnRlc3RcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9LFxuICAgIGxheWVyOiB7XG4gICAgICBsZWZ0OiAwLFxuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB0cmFuc2Zvcm06ICdzY2FsZSgwKScsXG4gICAgICB0cmFuc2l0aW9uOiB0aGVtZS50cmFuc2l0aW9ucy5jcmVhdGUoJ3RyYW5zZm9ybScsIHtcbiAgICAgICAgZWFzaW5nOiB0aGVtZS50cmFuc2l0aW9ucy5lYXNpbmcuZWFzZUluLFxuICAgICAgICBkdXJhdGlvbjogdGhlbWUudHJhbnNpdGlvbnMuZHVyYXRpb24uc2hvcnRlc3RcbiAgICAgIH0pXG4gICAgfSxcbiAgICBjaGVja2VkOiB7fVxuICB9O1xufTtcbi8qKlxuICogQGlnbm9yZSAtIGludGVybmFsIGNvbXBvbmVudC5cbiAqL1xuXG5mdW5jdGlvbiBSYWRpb0J1dHRvbkljb24ocHJvcHMpIHtcbiAgdmFyIGNoZWNrZWQgPSBwcm9wcy5jaGVja2VkLFxuICAgICAgY2xhc3NlcyA9IHByb3BzLmNsYXNzZXMsXG4gICAgICBmb250U2l6ZSA9IHByb3BzLmZvbnRTaXplO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogY2xzeChjbGFzc2VzLnJvb3QsIGNoZWNrZWQgJiYgY2xhc3Nlcy5jaGVja2VkKVxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSYWRpb0J1dHRvblVuY2hlY2tlZEljb24sIHtcbiAgICBmb250U2l6ZTogZm9udFNpemVcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJhZGlvQnV0dG9uQ2hlY2tlZEljb24sIHtcbiAgICBmb250U2l6ZTogZm9udFNpemUsXG4gICAgY2xhc3NOYW1lOiBjbGFzc2VzLmxheWVyXG4gIH0pKTtcbn1cblxucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gUmFkaW9CdXR0b25JY29uLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNvbXBvbmVudCBpcyBjaGVja2VkLlxuICAgKi9cbiAgY2hlY2tlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIE92ZXJyaWRlIG9yIGV4dGVuZCB0aGUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICogU2VlIFtDU1MgQVBJXSgjY3NzKSBiZWxvdyBmb3IgbW9yZSBkZXRhaWxzLlxuICAgKi9cbiAgY2xhc3NlczogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgcmFkaW8uXG4gICAqIGBzbWFsbGAgaXMgZXF1aXZhbGVudCB0byB0aGUgZGVuc2UgcmFkaW8gc3R5bGluZy5cbiAgICovXG4gIGZvbnRTaXplOiBQcm9wVHlwZXMub25lT2YoWydzbWFsbCcsICdtZWRpdW0nXSlcbn0gOiB2b2lkIDA7XG5leHBvcnQgZGVmYXVsdCB3aXRoU3R5bGVzKHN0eWxlcywge1xuICBuYW1lOiAnUHJpdmF0ZVJhZGlvQnV0dG9uSWNvbidcbn0pKFJhZGlvQnV0dG9uSWNvbik7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBAaWdub3JlIC0gaW50ZXJuYWwgY29tcG9uZW50LlxuICovXG5cbnZhciBSYWRpb0dyb3VwQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUmFkaW9Hcm91cENvbnRleHQuZGlzcGxheU5hbWUgPSAnUmFkaW9Hcm91cENvbnRleHQnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBSYWRpb0dyb3VwQ29udGV4dDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyByZWZUeXBlIH0gZnJvbSAnQG1hdGVyaWFsLXVpL3V0aWxzJztcbmltcG9ydCBTd2l0Y2hCYXNlIGZyb20gJy4uL2ludGVybmFsL1N3aXRjaEJhc2UnO1xuaW1wb3J0IFJhZGlvQnV0dG9uSWNvbiBmcm9tICcuL1JhZGlvQnV0dG9uSWNvbic7XG5pbXBvcnQgeyBhbHBoYSB9IGZyb20gJy4uL3N0eWxlcy9jb2xvck1hbmlwdWxhdG9yJztcbmltcG9ydCBjYXBpdGFsaXplIGZyb20gJy4uL3V0aWxzL2NhcGl0YWxpemUnO1xuaW1wb3J0IGNyZWF0ZUNoYWluZWRGdW5jdGlvbiBmcm9tICcuLi91dGlscy9jcmVhdGVDaGFpbmVkRnVuY3Rpb24nO1xuaW1wb3J0IHdpdGhTdHlsZXMgZnJvbSAnLi4vc3R5bGVzL3dpdGhTdHlsZXMnO1xuaW1wb3J0IHVzZVJhZGlvR3JvdXAgZnJvbSAnLi4vUmFkaW9Hcm91cC91c2VSYWRpb0dyb3VwJztcbmV4cG9ydCB2YXIgc3R5bGVzID0gZnVuY3Rpb24gc3R5bGVzKHRoZW1lKSB7XG4gIHJldHVybiB7XG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudC4gKi9cbiAgICByb290OiB7XG4gICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS50ZXh0LnNlY29uZGFyeVxuICAgIH0sXG5cbiAgICAvKiBQc2V1ZG8tY2xhc3MgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBjaGVja2VkPXt0cnVlfWAuICovXG4gICAgY2hlY2tlZDoge30sXG5cbiAgICAvKiBQc2V1ZG8tY2xhc3MgYXBwbGllZCB0byB0aGUgcm9vdCBlbGVtZW50IGlmIGBkaXNhYmxlZD17dHJ1ZX1gLiAqL1xuICAgIGRpc2FibGVkOiB7fSxcblxuICAgIC8qIFN0eWxlcyBhcHBsaWVkIHRvIHRoZSByb290IGVsZW1lbnQgaWYgYGNvbG9yPVwicHJpbWFyeVwiYC4gKi9cbiAgICBjb2xvclByaW1hcnk6IHtcbiAgICAgICcmJGNoZWNrZWQnOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbixcbiAgICAgICAgJyY6aG92ZXInOiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBhbHBoYSh0aGVtZS5wYWxldHRlLnByaW1hcnkubWFpbiwgdGhlbWUucGFsZXR0ZS5hY3Rpb24uaG92ZXJPcGFjaXR5KSxcbiAgICAgICAgICAvLyBSZXNldCBvbiB0b3VjaCBkZXZpY2VzLCBpdCBkb2Vzbid0IGFkZCBzcGVjaWZpY2l0eVxuICAgICAgICAgICdAbWVkaWEgKGhvdmVyOiBub25lKSc6IHtcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50J1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICcmJGRpc2FibGVkJzoge1xuICAgICAgICBjb2xvcjogdGhlbWUucGFsZXR0ZS5hY3Rpb24uZGlzYWJsZWRcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyogU3R5bGVzIGFwcGxpZWQgdG8gdGhlIHJvb3QgZWxlbWVudCBpZiBgY29sb3I9XCJzZWNvbmRhcnlcImAuICovXG4gICAgY29sb3JTZWNvbmRhcnk6IHtcbiAgICAgICcmJGNoZWNrZWQnOiB7XG4gICAgICAgIGNvbG9yOiB0aGVtZS5wYWxldHRlLnNlY29uZGFyeS5tYWluLFxuICAgICAgICAnJjpob3Zlcic6IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGFscGhhKHRoZW1lLnBhbGV0dGUuc2Vjb25kYXJ5Lm1haW4sIHRoZW1lLnBhbGV0dGUuYWN0aW9uLmhvdmVyT3BhY2l0eSksXG4gICAgICAgICAgLy8gUmVzZXQgb24gdG91Y2ggZGV2aWNlcywgaXQgZG9lc24ndCBhZGQgc3BlY2lmaWNpdHlcbiAgICAgICAgICAnQG1lZGlhIChob3Zlcjogbm9uZSknOiB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnJiRkaXNhYmxlZCc6IHtcbiAgICAgICAgY29sb3I6IHRoZW1lLnBhbGV0dGUuYWN0aW9uLmRpc2FibGVkXG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcbnZhciBkZWZhdWx0Q2hlY2tlZEljb24gPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSYWRpb0J1dHRvbkljb24sIHtcbiAgY2hlY2tlZDogdHJ1ZVxufSk7XG52YXIgZGVmYXVsdEljb24gPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSYWRpb0J1dHRvbkljb24sIG51bGwpO1xudmFyIFJhZGlvID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gUmFkaW8ocHJvcHMsIHJlZikge1xuICB2YXIgY2hlY2tlZFByb3AgPSBwcm9wcy5jaGVja2VkLFxuICAgICAgY2xhc3NlcyA9IHByb3BzLmNsYXNzZXMsXG4gICAgICBfcHJvcHMkY29sb3IgPSBwcm9wcy5jb2xvcixcbiAgICAgIGNvbG9yID0gX3Byb3BzJGNvbG9yID09PSB2b2lkIDAgPyAnc2Vjb25kYXJ5JyA6IF9wcm9wcyRjb2xvcixcbiAgICAgIG5hbWVQcm9wID0gcHJvcHMubmFtZSxcbiAgICAgIG9uQ2hhbmdlUHJvcCA9IHByb3BzLm9uQ2hhbmdlLFxuICAgICAgX3Byb3BzJHNpemUgPSBwcm9wcy5zaXplLFxuICAgICAgc2l6ZSA9IF9wcm9wcyRzaXplID09PSB2b2lkIDAgPyAnbWVkaXVtJyA6IF9wcm9wcyRzaXplLFxuICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIFtcImNoZWNrZWRcIiwgXCJjbGFzc2VzXCIsIFwiY29sb3JcIiwgXCJuYW1lXCIsIFwib25DaGFuZ2VcIiwgXCJzaXplXCJdKTtcblxuICB2YXIgcmFkaW9Hcm91cCA9IHVzZVJhZGlvR3JvdXAoKTtcbiAgdmFyIGNoZWNrZWQgPSBjaGVja2VkUHJvcDtcbiAgdmFyIG9uQ2hhbmdlID0gY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uKG9uQ2hhbmdlUHJvcCwgcmFkaW9Hcm91cCAmJiByYWRpb0dyb3VwLm9uQ2hhbmdlKTtcbiAgdmFyIG5hbWUgPSBuYW1lUHJvcDtcblxuICBpZiAocmFkaW9Hcm91cCkge1xuICAgIGlmICh0eXBlb2YgY2hlY2tlZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNoZWNrZWQgPSByYWRpb0dyb3VwLnZhbHVlID09PSBwcm9wcy52YWx1ZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBuYW1lID0gcmFkaW9Hcm91cC5uYW1lO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTd2l0Y2hCYXNlLCBfZXh0ZW5kcyh7XG4gICAgY29sb3I6IGNvbG9yLFxuICAgIHR5cGU6IFwicmFkaW9cIixcbiAgICBpY29uOiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGRlZmF1bHRJY29uLCB7XG4gICAgICBmb250U2l6ZTogc2l6ZSA9PT0gJ3NtYWxsJyA/ICdzbWFsbCcgOiAnbWVkaXVtJ1xuICAgIH0pLFxuICAgIGNoZWNrZWRJY29uOiAvKiNfX1BVUkVfXyovUmVhY3QuY2xvbmVFbGVtZW50KGRlZmF1bHRDaGVja2VkSWNvbiwge1xuICAgICAgZm9udFNpemU6IHNpemUgPT09ICdzbWFsbCcgPyAnc21hbGwnIDogJ21lZGl1bSdcbiAgICB9KSxcbiAgICBjbGFzc2VzOiB7XG4gICAgICByb290OiBjbHN4KGNsYXNzZXMucm9vdCwgY2xhc3Nlc1tcImNvbG9yXCIuY29uY2F0KGNhcGl0YWxpemUoY29sb3IpKV0pLFxuICAgICAgY2hlY2tlZDogY2xhc3Nlcy5jaGVja2VkLFxuICAgICAgZGlzYWJsZWQ6IGNsYXNzZXMuZGlzYWJsZWRcbiAgICB9LFxuICAgIG5hbWU6IG5hbWUsXG4gICAgY2hlY2tlZDogY2hlY2tlZCxcbiAgICBvbkNoYW5nZTogb25DaGFuZ2UsXG4gICAgcmVmOiByZWZcbiAgfSwgb3RoZXIpKTtcbn0pO1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gUmFkaW8ucHJvcFR5cGVzID0ge1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBXYXJuaW5nIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIHwgVGhlc2UgUHJvcFR5cGVzIGFyZSBnZW5lcmF0ZWQgZnJvbSB0aGUgVHlwZVNjcmlwdCB0eXBlIGRlZmluaXRpb25zIHxcbiAgLy8gfCAgICAgVG8gdXBkYXRlIHRoZW0gZWRpdCB0aGUgZC50cyBmaWxlIGFuZCBydW4gXCJ5YXJuIHByb3B0eXBlc1wiICAgICB8XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgY29tcG9uZW50IGlzIGNoZWNrZWQuXG4gICAqL1xuICBjaGVja2VkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogVGhlIGljb24gdG8gZGlzcGxheSB3aGVuIHRoZSBjb21wb25lbnQgaXMgY2hlY2tlZC5cbiAgICovXG4gIGNoZWNrZWRJY29uOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogT3ZlcnJpZGUgb3IgZXh0ZW5kIHRoZSBzdHlsZXMgYXBwbGllZCB0byB0aGUgY29tcG9uZW50LlxuICAgKiBTZWUgW0NTUyBBUEldKCNjc3MpIGJlbG93IGZvciBtb3JlIGRldGFpbHMuXG4gICAqL1xuICBjbGFzc2VzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGNvbXBvbmVudC4gSXQgc3VwcG9ydHMgdGhvc2UgdGhlbWUgY29sb3JzIHRoYXQgbWFrZSBzZW5zZSBmb3IgdGhpcyBjb21wb25lbnQuXG4gICAqL1xuICBjb2xvcjogUHJvcFR5cGVzLm9uZU9mKFsnZGVmYXVsdCcsICdwcmltYXJ5JywgJ3NlY29uZGFyeSddKSxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgcmFkaW8gd2lsbCBiZSBkaXNhYmxlZC5cbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGUgcmlwcGxlIGVmZmVjdCB3aWxsIGJlIGRpc2FibGVkLlxuICAgKi9cbiAgZGlzYWJsZVJpcHBsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBpY29uIHRvIGRpc3BsYXkgd2hlbiB0aGUgY29tcG9uZW50IGlzIHVuY2hlY2tlZC5cbiAgICovXG4gIGljb246IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBUaGUgaWQgb2YgdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlkOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gIC8qKlxuICAgKiBbQXR0cmlidXRlc10oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9FbGVtZW50L2lucHV0I0F0dHJpYnV0ZXMpIGFwcGxpZWQgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UHJvcHM6IFByb3BUeXBlcy5vYmplY3QsXG5cbiAgLyoqXG4gICAqIFBhc3MgYSByZWYgdG8gdGhlIGBpbnB1dGAgZWxlbWVudC5cbiAgICovXG4gIGlucHV0UmVmOiByZWZUeXBlLFxuXG4gIC8qKlxuICAgKiBOYW1lIGF0dHJpYnV0ZSBvZiB0aGUgYGlucHV0YCBlbGVtZW50LlxuICAgKi9cbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgd2hlbiB0aGUgc3RhdGUgaXMgY2hhbmdlZC5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGV2ZW50IFRoZSBldmVudCBzb3VyY2Ugb2YgdGhlIGNhbGxiYWNrLlxuICAgKiBZb3UgY2FuIHB1bGwgb3V0IHRoZSBuZXcgdmFsdWUgYnkgYWNjZXNzaW5nIGBldmVudC50YXJnZXQudmFsdWVgIChzdHJpbmcpLlxuICAgKiBZb3UgY2FuIHB1bGwgb3V0IHRoZSBuZXcgY2hlY2tlZCBzdGF0ZSBieSBhY2Nlc3NpbmcgYGV2ZW50LnRhcmdldC5jaGVja2VkYCAoYm9vbGVhbikuXG4gICAqL1xuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGBpbnB1dGAgZWxlbWVudCB3aWxsIGJlIHJlcXVpcmVkLlxuICAgKi9cbiAgcmVxdWlyZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgcmFkaW8uXG4gICAqIGBzbWFsbGAgaXMgZXF1aXZhbGVudCB0byB0aGUgZGVuc2UgcmFkaW8gc3R5bGluZy5cbiAgICovXG4gIHNpemU6IFByb3BUeXBlcy5vbmVPZihbJ21lZGl1bScsICdzbWFsbCddKSxcblxuICAvKipcbiAgICogVGhlIHZhbHVlIG9mIHRoZSBjb21wb25lbnQuIFRoZSBET00gQVBJIGNhc3RzIHRoaXMgdG8gYSBzdHJpbmcuXG4gICAqL1xuICB2YWx1ZTogUHJvcFR5cGVzLmFueVxufSA6IHZvaWQgMDtcbmV4cG9ydCBkZWZhdWx0IHdpdGhTdHlsZXMoc3R5bGVzLCB7XG4gIG5hbWU6ICdNdWlSYWRpbydcbn0pKFJhZGlvKTsiLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmFkaW9Hcm91cENvbnRleHQgZnJvbSAnLi9SYWRpb0dyb3VwQ29udGV4dCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VSYWRpb0dyb3VwKCkge1xuICByZXR1cm4gUmVhY3QudXNlQ29udGV4dChSYWRpb0dyb3VwQ29udGV4dCk7XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyB1c2VIaXN0b3J5IH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXNcIjtcclxuaW1wb3J0IGxvZ28gZnJvbSBcIi4uLy4uLy4uLy4uL3Jlcy9pbWFnZXMvbG9nby5wbmdcIjtcclxuaW1wb3J0IHsgUmFkaW8gfSBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmVcIjtcclxuXHJcbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoKHRoZW1lKSA9PiAoe1xyXG4gIHJvb3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxyXG4gICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcclxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxyXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcclxuICAgIHdpZHRoOiBcIjcwcHhcIixcclxuICAgIGhlaWdodDogXCI3MHB4XCIsXHJcbiAgICBtYXJnaW46IFwiMC41cmVtXCIsXHJcbiAgICBwYWRkaW5nOiBcIjFyZW1cIixcclxuICAgIGJhY2tncm91bmRDb2xvcjogXCIjRUVFRUVFXCIsXHJcbiAgICBib3JkZXJSYWRpdXM6IFwiMTBweFwiLFxyXG4gIH0sXHJcbn0pKTtcclxuXHJcbmludGVyZmFjZSBDb3Vwb25DYXJkUHJvcCB7XHJcbiAgY291bnQ6IG51bWJlcjtcclxuICBwcmljZTogbnVtYmVyO1xyXG4gIHNlbGVjdGVkOiBudW1iZXI7XHJcbiAgc2V0U2VsZWN0ZWQ6IChjb3VudDogbnVtYmVyKSA9PiB2b2lkO1xyXG59XHJcblxyXG5jb25zdCBDb3Vwb25DYXJkID0gKHsgY291bnQsIHByaWNlLCBzZWxlY3RlZCwgc2V0U2VsZWN0ZWQgfTogQ291cG9uQ2FyZFByb3ApID0+IHtcclxuICBjb25zdCBjbGFzc2VzID0gdXNlU3R5bGVzKCk7XHJcbiAgY29uc3Qgb25DaGFuZ2VTZWxlY3RlZCA9IChjaGFuZ2VkQ291bnQ6IG51bWJlcikgPT4ge1xyXG4gICAgaWYgKGNoYW5nZWRDb3VudCA9PT0gc2VsZWN0ZWQpIHJldHVybiBzZXRTZWxlY3RlZCgwKTtcclxuICAgIHNldFNlbGVjdGVkKGNoYW5nZWRDb3VudCk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXZcclxuICAgICAgY2xhc3NOYW1lPXtjbGFzc2VzLnJvb3R9XHJcbiAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuICAgICAgICBvbkNoYW5nZVNlbGVjdGVkKGNvdW50KTtcclxuICAgICAgfX1cclxuICAgID5cclxuICAgICAgPFJhZGlvIGNoZWNrZWQ9e3NlbGVjdGVkID09PSBjb3VudH0gdmFsdWU9e2NvdW50fSBuYW1lPVwicmFkaW8tYnV0dG9uLWRlbW9cIiBpbnB1dFByb3BzPXt7IFwiYXJpYS1sYWJlbFwiOiBcIkJcIiB9fSAvPlxyXG4gICAgICA8ZGl2Pntjb3VudH3tmozqtow8L2Rpdj5cclxuICAgICAgPGRpdj57cHJpY2V97JuQPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ291cG9uQ2FyZDtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZUhpc3RvcnksIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzXCI7XHJcbmltcG9ydCBBZGRJY29uIGZyb20gXCJAbWF0ZXJpYWwtdWkvaWNvbnMvQWRkXCI7XHJcbmltcG9ydCBQYWdlSGVhZGVyVGl0bGUgZnJvbSBcInNyYy91dGlscy9jb21wb25lbnQvY29tbW9uL1BhZ2VIZWFkZXJUaXRsZVwiO1xyXG5pbXBvcnQgUGFnZUhlYWRlclN1YlRpdGxlIGZyb20gXCJzcmMvdXRpbHMvY29tcG9uZW50L2NvbW1vbi9QYWdlSGVhZGVyU3ViVGl0bGVcIjtcclxuaW1wb3J0IEJ1dHRvbiBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmUvQnV0dG9uXCI7XHJcbmltcG9ydCBDb3Vwb25DYXJkIGZyb20gXCIuL2NvbXBvbmVudC9Db3Vwb25DYXJkXCI7XHJcblxyXG5jb25zdCBVc2VyQ291cG9uUGFnZSA9ICgpID0+IHtcclxuICBjb25zdCBbc2VsZWN0ZWRUZXh0Q291bnQsIHNldFNlbGVjdGVkVGV4dENvdW50XSA9IHVzZVN0YXRlPG51bWJlcj4oMSk7XHJcbiAgY29uc3QgW3NlbGVjdGVkVmlkZW9Db3VudCwgc2V0U2VsZWN0ZWRWaWRlb0NvdW50XSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XHJcblxyXG4gIGNvbnN0IGJ1eUxlc3NvbkNvdXBvbiA9ICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKFwiYnV5TGVzc29uQ291cG9uIGNsaWNrIVwiKTtcclxuICAgIGNvbnNvbGUubG9nKGDrrLjsnpAg66CI7Iqo6raMIDogJHtzZWxlY3RlZFRleHRDb3VudH0sIOyYgeyDgSDroIjsiqjqtowgOiAke3NlbGVjdGVkVmlkZW9Db3VudH0g6rWs66ekIOyalOyyrWApO1xyXG4gIH07XHJcbiAgY29uc3QgVXNlckNvdXBvblBhZ2VQcm9wOiBVc2VyQ291cG9uUGFnZVByb3AgPSB7XHJcbiAgICBzZWxlY3RlZFRleHRDb3VudDogc2VsZWN0ZWRUZXh0Q291bnQsXHJcbiAgICBzZWxlY3RlZFZpZGVvQ291bnQ6IHNlbGVjdGVkVmlkZW9Db3VudCxcclxuICAgIGNoYW5nZVNlbGVjdGVkVGV4dENvdW50OiAoY291bnQ6IG51bWJlcikgPT4gc2V0U2VsZWN0ZWRUZXh0Q291bnQoY291bnQpLFxyXG4gICAgY2hhbmdlU2VsZWN0ZWRWaWRlb0NvdW50OiAoY291bnQ6IG51bWJlcikgPT4gc2V0U2VsZWN0ZWRWaWRlb0NvdW50KGNvdW50KSxcclxuICAgIGJ1eUxlc3NvbkNvdXBvbjogYnV5TGVzc29uQ291cG9uLFxyXG4gIH07XHJcbiAgcmV0dXJuIDxVc2VyQ291cG9uUGFnZVZpZXcgey4uLlVzZXJDb3Vwb25QYWdlUHJvcH0gLz47XHJcbn07XHJcblxyXG5pbnRlcmZhY2UgVXNlckNvdXBvblBhZ2VQcm9wIHtcclxuICBzZWxlY3RlZFRleHRDb3VudDogbnVtYmVyO1xyXG4gIHNlbGVjdGVkVmlkZW9Db3VudDogbnVtYmVyO1xyXG4gIGNoYW5nZVNlbGVjdGVkVGV4dENvdW50OiAoY291bnQ6IG51bWJlcikgPT4gdm9pZDtcclxuICBjaGFuZ2VTZWxlY3RlZFZpZGVvQ291bnQ6IChjb3VudDogbnVtYmVyKSA9PiB2b2lkO1xyXG4gIGJ1eUxlc3NvbkNvdXBvbjogKCkgPT4gdm9pZDtcclxufVxyXG5cclxuY29uc3QgdXNlU3R5bGVzID0gbWFrZVN0eWxlcygodGhlbWUpID0+ICh7XHJcbiAgcm9vdDoge1xyXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXHJcbiAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxyXG4gICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcclxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxyXG4gICAgZmxleEdyb3c6IDEsXHJcbiAgICBtYXhXaWR0aDogXCI1MDBweFwiLFxyXG4gICAgbWFyZ2luOiBcImF1dG9cIixcclxuICAgIHBhZGRpbmc6IFwiMC41cmVtXCIsXHJcbiAgICBcIiYgPiBkaXZcIjoge1xyXG4gICAgICBtYXJnaW5Cb3R0b206IFwiMC41cmVtXCIsXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgdGV4dENvbnRlbnQ6IHtcclxuICAgIGZvbnRTaXplOiBcIjAuOHJlbVwiLFxyXG4gIH0sXHJcbiAgY291cG9uTGF5b3V0OiB7XHJcbiAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICBtYXJnaW46IFwiMC4xcmVtXCIsXHJcbiAgfSxcclxuICBjb3Vwb25DYXJkR3JvdXA6IHtcclxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxyXG4gICAgbWFyZ2luOiBcIjAuNXJlbVwiLFxyXG4gIH0sXHJcbiAgYXBwbHlCdG46IHtcclxuICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXHJcbiAgICBib3R0b206IFwiMTBweFwiLFxyXG4gICAgd2lkdGg6IFwiOTAlXCIsXHJcbiAgICBtYXhXaWR0aDogXCIzMDBweFwiLFxyXG4gICAgZm9udFdlaWdodDogXCJib2xkXCIsXHJcbiAgfSxcclxufSkpO1xyXG5cclxuY29uc3QgVXNlckNvdXBvblBhZ2VWaWV3ID0gKHtcclxuICBzZWxlY3RlZFRleHRDb3VudCxcclxuICBzZWxlY3RlZFZpZGVvQ291bnQsXHJcbiAgY2hhbmdlU2VsZWN0ZWRUZXh0Q291bnQsXHJcbiAgY2hhbmdlU2VsZWN0ZWRWaWRlb0NvdW50LFxyXG4gIGJ1eUxlc3NvbkNvdXBvbixcclxufTogVXNlckNvdXBvblBhZ2VQcm9wKSA9PiB7XHJcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcygpO1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlcy5yb290fT5cclxuICAgICAgPFBhZ2VIZWFkZXJUaXRsZSB0aXRsZT17XCLroIjsiqjqtowg6rWs66ekXCJ9IC8+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmNvdXBvbkxheW91dH0+XHJcbiAgICAgICAgPFBhZ2VIZWFkZXJTdWJUaXRsZSB0aXRsZT17XCLrrLjsnpAg66CI7Iqo6raMXCJ9IC8+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMudGV4dENvbnRlbnR9PuuztOuCtOyjvOyLoCDsiqTsnJkg7JiB7IOB7JeQIOusuOyekOuhnCDtlLzrk5zrsLHsnYQg7KCE64us65Oc66a964uI64ukLjwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmNvdXBvbkNhcmRHcm91cH0+XHJcbiAgICAgICAgICA8Q291cG9uQ2FyZCBjb3VudD17MX0gcHJpY2U9ezQ1MDB9IHNlbGVjdGVkPXtzZWxlY3RlZFRleHRDb3VudH0gc2V0U2VsZWN0ZWQ9e2NoYW5nZVNlbGVjdGVkVGV4dENvdW50fSAvPlxyXG4gICAgICAgICAgPENvdXBvbkNhcmQgY291bnQ9ezV9IHByaWNlPXsxOTgwMH0gc2VsZWN0ZWQ9e3NlbGVjdGVkVGV4dENvdW50fSBzZXRTZWxlY3RlZD17Y2hhbmdlU2VsZWN0ZWRUZXh0Q291bnR9IC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlcy5jb3Vwb25MYXlvdXR9PlxyXG4gICAgICAgIDxQYWdlSGVhZGVyU3ViVGl0bGUgdGl0bGU9e1wi7JiB7IOBIOugiOyKqOq2jFwifSAvPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLnRleHRDb250ZW50fT7tlITroZzri5jsnbQg66ee7LakIOyYgeyDgeydhCDssI3slrTshJwg7ZS865Oc67Cx7J2EIOyghOuLrOuTnOumveuLiOuLpC48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlcy5jb3Vwb25DYXJkR3JvdXB9PlxyXG4gICAgICAgICAgPENvdXBvbkNhcmQgY291bnQ9ezF9IHByaWNlPXs0NTAwfSBzZWxlY3RlZD17c2VsZWN0ZWRWaWRlb0NvdW50fSBzZXRTZWxlY3RlZD17Y2hhbmdlU2VsZWN0ZWRWaWRlb0NvdW50fSAvPlxyXG4gICAgICAgICAgPENvdXBvbkNhcmQgY291bnQ9ezV9IHByaWNlPXsxOTgwMH0gc2VsZWN0ZWQ9e3NlbGVjdGVkVmlkZW9Db3VudH0gc2V0U2VsZWN0ZWQ9e2NoYW5nZVNlbGVjdGVkVmlkZW9Db3VudH0gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxCdXR0b25cclxuICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXMuYXBwbHlCdG59XHJcbiAgICAgICAgZGlzYWJsZWQ9e3NlbGVjdGVkVGV4dENvdW50ICsgc2VsZWN0ZWRWaWRlb0NvdW50ID09PSAwfVxyXG4gICAgICAgIHZhcmlhbnQ9XCJjb250YWluZWRcIlxyXG4gICAgICAgIG9uQ2xpY2s9e2J1eUxlc3NvbkNvdXBvbn1cclxuICAgICAgPlxyXG4gICAgICAgIOugiOyKqOq2jCDqtazrp6TtlZjquLBcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlckNvdXBvblBhZ2U7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgbWFrZVN0eWxlcyB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXNcIjtcclxuXHJcbmNvbnN0IHVzZVN0eWxlcyA9IG1ha2VTdHlsZXMoKHRoZW1lKSA9PiAoe1xyXG4gIHRpdGxlOiB7XHJcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcclxuICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgIGZvbnRTaXplOiBcIjFyZW1cIixcclxuICAgIGp1c3RpZnlDb250ZW50OiBcImZsZXgtc3RhcnRcIixcclxuICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiLFxyXG4gIH0sXHJcbn0pKTtcclxuXHJcbmludGVyZmFjZSBQYWdlSGVhZGVyU3ViVGl0bGVQcm9wIHtcclxuICB0aXRsZTogc3RyaW5nO1xyXG59XHJcblxyXG5jb25zdCBQYWdlSGVhZGVyU3ViVGl0bGUgPSAoeyB0aXRsZSB9OiBQYWdlSGVhZGVyU3ViVGl0bGVQcm9wKSA9PiB7XHJcbiAgY29uc3QgY2xhc3NlcyA9IHVzZVN0eWxlcygpO1xyXG5cclxuICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMudGl0bGV9PiB7dGl0bGV9PC9kaXY+O1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGFnZUhlYWRlclN1YlRpdGxlO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IG1ha2VTdHlsZXMgfSBmcm9tIFwiQG1hdGVyaWFsLXVpL2NvcmUvc3R5bGVzXCI7XHJcbmltcG9ydCBUeXBvZ3JhcGh5IGZyb20gXCJAbWF0ZXJpYWwtdWkvY29yZS9UeXBvZ3JhcGh5XCI7XHJcbmltcG9ydCBsb2dvIGZyb20gXCIuLi8uLi8uLi9yZXMvaW1hZ2VzL2xvZ28ucG5nXCI7XHJcblxyXG5jb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKCh0aGVtZSkgPT4gKHtcclxuICB0aXRsZToge1xyXG4gICAgZGlzcGxheTogXCJmbGV4XCIsXHJcbiAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICBmb250U2l6ZTogXCIxLjI1cmVtXCIsXHJcbiAgICBqdXN0aWZ5Q29udGVudDogXCJmbGV4LXN0YXJ0XCIsXHJcbiAgICBmb250V2VpZ2h0OiBcImJvbGRcIixcclxuICB9LFxyXG59KSk7XHJcblxyXG5pbnRlcmZhY2UgUGFnZUhlYWRlclRpdGxlUHJvcCB7XHJcbiAgdGl0bGU6IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgUGFnZUhlYWRlclRpdGxlID0gKHsgdGl0bGUgfTogUGFnZUhlYWRlclRpdGxlUHJvcCkgPT4ge1xyXG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcclxuXHJcbiAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLnRpdGxlfT4ge3RpdGxlfTwvZGl2PjtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBhZ2VIZWFkZXJUaXRsZTtcclxuIl0sIm5hbWVzIjpbIkJ1dHRvbiIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJjbGFzc2VzIiwiY2xhc3NOYW1lIiwiX3Byb3BzJGNvbG9yIiwiY29sb3IiLCJfcHJvcHMkY29tcG9uZW50IiwiY29tcG9uZW50IiwiX3Byb3BzJGRpc2FibGVkIiwiZGlzYWJsZWQiLCJfcHJvcHMkZGlzYWJsZUVsZXZhdGkiLCJkaXNhYmxlRWxldmF0aW9uIiwiX3Byb3BzJGRpc2FibGVGb2N1c1JpIiwiZGlzYWJsZUZvY3VzUmlwcGxlIiwiZW5kSWNvblByb3AiLCJlbmRJY29uIiwiZm9jdXNWaXNpYmxlQ2xhc3NOYW1lIiwiX3Byb3BzJGZ1bGxXaWR0aCIsImZ1bGxXaWR0aCIsIl9wcm9wcyRzaXplIiwic2l6ZSIsInN0YXJ0SWNvblByb3AiLCJzdGFydEljb24iLCJfcHJvcHMkdHlwZSIsInR5cGUiLCJfcHJvcHMkdmFyaWFudCIsInZhcmlhbnQiLCJvdGhlciIsImNvbmNhdCIsInJvb3QiLCJjb2xvckluaGVyaXQiLCJmb2N1c1JpcHBsZSIsImZvY3VzVmlzaWJsZSIsImxhYmVsIiwidGhlbWUiLCJ0eXBvZ3JhcGh5IiwiYnV0dG9uIiwiYm94U2l6aW5nIiwibWluV2lkdGgiLCJwYWRkaW5nIiwiYm9yZGVyUmFkaXVzIiwic2hhcGUiLCJwYWxldHRlIiwidGV4dCIsInByaW1hcnkiLCJ0cmFuc2l0aW9uIiwidHJhbnNpdGlvbnMiLCJjcmVhdGUiLCJkdXJhdGlvbiIsInNob3J0IiwidGV4dERlY29yYXRpb24iLCJiYWNrZ3JvdW5kQ29sb3IiLCJhY3Rpb24iLCJob3Zlck9wYWNpdHkiLCJ3aWR0aCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJ0ZXh0UHJpbWFyeSIsIm1haW4iLCJ0ZXh0U2Vjb25kYXJ5Iiwic2Vjb25kYXJ5Iiwib3V0bGluZWQiLCJib3JkZXIiLCJkaXNhYmxlZEJhY2tncm91bmQiLCJvdXRsaW5lZFByaW1hcnkiLCJvdXRsaW5lZFNlY29uZGFyeSIsImNvbnRhaW5lZCIsImdldENvbnRyYXN0VGV4dCIsImdyZXkiLCJib3hTaGFkb3ciLCJzaGFkb3dzIiwiQTEwMCIsImNvbnRhaW5lZFByaW1hcnkiLCJjb250cmFzdFRleHQiLCJkYXJrIiwiY29udGFpbmVkU2Vjb25kYXJ5IiwiYm9yZGVyQ29sb3IiLCJ0ZXh0U2l6ZVNtYWxsIiwiZm9udFNpemUiLCJweFRvUmVtIiwidGV4dFNpemVMYXJnZSIsIm91dGxpbmVkU2l6ZVNtYWxsIiwib3V0bGluZWRTaXplTGFyZ2UiLCJjb250YWluZWRTaXplU21hbGwiLCJjb250YWluZWRTaXplTGFyZ2UiLCJzaXplU21hbGwiLCJzaXplTGFyZ2UiLCJtYXJnaW5SaWdodCIsIm1hcmdpbkxlZnQiLCJpY29uU2l6ZVNtYWxsIiwiaWNvblNpemVNZWRpdW0iLCJpY29uU2l6ZUxhcmdlIiwibmFtZSIsIkZvcm1Db250cm9sQ29udGV4dCIsIlN3aXRjaEJhc2UiLCJhdXRvRm9jdXMiLCJjaGVja2VkUHJvcCIsImNoZWNrZWQiLCJjaGVja2VkSWNvbiIsImRlZmF1bHRDaGVja2VkIiwiZGlzYWJsZWRQcm9wIiwiaWNvbiIsImlkIiwiaW5wdXRQcm9wcyIsImlucHV0UmVmIiwib25CbHVyIiwib25DaGFuZ2UiLCJvbkZvY3VzIiwicmVhZE9ubHkiLCJyZXF1aXJlZCIsInRhYkluZGV4IiwidmFsdWUiLCJfdXNlQ29udHJvbGxlZCIsInVzZUNvbnRyb2xsZWQiLCJjb250cm9sbGVkIiwiZGVmYXVsdCIsIkJvb2xlYW4iLCJzdGF0ZSIsIl91c2VDb250cm9sbGVkMiIsInNldENoZWNrZWRTdGF0ZSIsIm11aUZvcm1Db250cm9sIiwiaGFzTGFiZWxGb3IiLCJJY29uQnV0dG9uIiwicm9sZSIsInVuZGVmaW5lZCIsImV2ZW50IiwiaW5wdXQiLCJuZXdDaGVja2VkIiwidGFyZ2V0Iiwid2l0aFN0eWxlcyIsImN1cnNvciIsInBvc2l0aW9uIiwib3BhY2l0eSIsImhlaWdodCIsInRvcCIsImxlZnQiLCJtYXJnaW4iLCJ6SW5kZXgiLCJjcmVhdGVTdmdJY29uIiwiZCIsInRyYW5zZm9ybSIsImVhc2luZyIsImVhc2VPdXQiLCJzaG9ydGVzdCIsImxheWVyIiwiZWFzZUluIiwiUmFkaW9CdXR0b25VbmNoZWNrZWQiLCJSYWRpb0J1dHRvbkNoZWNrZWQiLCJkZWZhdWx0Q2hlY2tlZEljb24iLCJkZWZhdWx0SWNvbiIsIlJhZGlvIiwibmFtZVByb3AiLCJvbkNoYW5nZVByb3AiLCJyYWRpb0dyb3VwIiwiY3JlYXRlQ2hhaW5lZEZ1bmN0aW9uIiwiY2FwaXRhbGl6ZSIsImNvbG9yUHJpbWFyeSIsImNvbG9yU2Vjb25kYXJ5IiwidXNlU3R5bGVzIiwibWFrZVN0eWxlcyIsImZsZXhEaXJlY3Rpb24iLCJjb3VudCIsInByaWNlIiwic2VsZWN0ZWQiLCJzZXRTZWxlY3RlZCIsIm9uQ2xpY2siLCJjaGFuZ2VkQ291bnQiLCJvbkNoYW5nZVNlbGVjdGVkIiwiZmxleEdyb3ciLCJtYXhXaWR0aCIsIm1hcmdpbkJvdHRvbSIsInRleHRDb250ZW50IiwiY291cG9uTGF5b3V0IiwiY291cG9uQ2FyZEdyb3VwIiwiYXBwbHlCdG4iLCJib3R0b20iLCJmb250V2VpZ2h0IiwiVXNlckNvdXBvblBhZ2VWaWV3Iiwic2VsZWN0ZWRUZXh0Q291bnQiLCJzZWxlY3RlZFZpZGVvQ291bnQiLCJjaGFuZ2VTZWxlY3RlZFRleHRDb3VudCIsImNoYW5nZVNlbGVjdGVkVmlkZW9Db3VudCIsImJ1eUxlc3NvbkNvdXBvbiIsIlBhZ2VIZWFkZXJUaXRsZSIsInRpdGxlIiwiUGFnZUhlYWRlclN1YlRpdGxlIiwic2V0U2VsZWN0ZWRUZXh0Q291bnQiLCJ1c2VTdGF0ZSIsInNldFNlbGVjdGVkVmlkZW9Db3VudCIsIlVzZXJDb3Vwb25QYWdlUHJvcCJdLCJzb3VyY2VSb290IjoiIn0=